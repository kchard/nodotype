var assert = require("assert");var router = require("../src/router");var testNoHandlers = function() {	router.route("req", "res", "pathname");	assert.ok(true);};var testSingleDefaultHandler = function() {		var verify = {};	var handler = function(req, res, next, pathname) {		verify.req = req;		verify.res = res;		verify.next = next;		verify.pathname = pathname;	};		router.setDefaultHandlers([handler]);	router.route("req", "res", "pathname");		assert.strictEqual("req", verify.req);	assert.strictEqual("res", verify.res);	assert.strictEqual("pathname", verify.pathname);};var testTwoDefaultHandlers = function() {		var verify = {};	var handler1 = function(req, res, next, pathname) {		verify.req1 = req + 1;		verify.res1 = res + 1;		verify.pathname1 = pathname + 1;		next();	};		var handler2 = function(req, res, next, pathname) {		verify.req2 = req + 2;		verify.res2 = res + 2;		verify.pathname2 = pathname + 2;	};		router.setDefaultHandlers([handler1, handler2]);	router.route("req", "res", "pathname");		assert.strictEqual("req1", verify.req1);	assert.strictEqual("res1", verify.res1);	assert.strictEqual("pathname1", verify.pathname1);		assert.strictEqual("req2", verify.req2);	assert.strictEqual("res2", verify.res2);	assert.strictEqual("pathname2", verify.pathname2);};var testRouteWithSingleHandler_exactMatch = function() {		var verify = {};	var handler = function(req, res, next, pathname) {		verify.req = req;		verify.res = res;		verify.next = next;		verify.pathname = pathname;	};		router.addRoute("pathname", [handler]);	router.route("req", "res", "pathname");		assert.strictEqual("req", verify.req);	assert.strictEqual("res", verify.res);	assert.strictEqual("pathname", verify.pathname);};var testRouteWithSingleHandler_trailingSlash = function() {		var verify = {};	var handler = function(req, res, next, pathname) {		verify.req = req;		verify.res = res;		verify.next = next;		verify.pathname = pathname;	};		router.addRoute("pathname", [handler]);	router.route("req", "res", "pathname/");		assert.strictEqual("req", verify.req);	assert.strictEqual("res", verify.res);	assert.strictEqual("pathname", verify.pathname);};var testRouteWithSingleHandler_withId = function() {		var verify = {};	var handler = function(req, res, next, pathname) {		verify.req = req;		verify.res = res;		verify.next = next;		verify.pathname = pathname;	};		router.addRoute("pathname", [handler]);	router.route("req", "res", "pathname/1");		assert.strictEqual("req", verify.req);	assert.strictEqual("res", verify.res);	assert.strictEqual("pathname/1", verify.pathname);};var testRouteWithSingleHandler_withIdAndTrailingSlash = function() {		var verify = {};	var handler = function(req, res, next, pathname) {		verify.req = req;		verify.res = res;		verify.next = next;		verify.pathname = pathname;	};		router.addRoute("pathname", [handler]);	router.route("req", "res", "pathname/1/");		assert.strictEqual("req", verify.req);	assert.strictEqual("res", verify.res);	assert.strictEqual("pathname/1", verify.pathname);};var testRouteWithSingleHandler_withOneAdditionalCharacter = function() {		var verify = {};	var handler = function(req, res, next, pathname) {		verify.req = req;		verify.res = res;		verify.next = next;		verify.pathname = pathname;	};		router.addRoute("pathname", [handler]);	router.route("req", "res", "pathnamee");		assert.strictEqual(undefined, verify.req);	assert.strictEqual(undefined, verify.res);	assert.strictEqual(undefined, verify.pathname);};var testFallbackToDefault = function() {		var verify = {};	var handler = function(req, res, next, pathname) {		verify.req = req;		verify.res = res;		verify.pathname = pathname;	};		var defaultHandler = function(req, res, next, pathname) {		verify.reqdef = req + "def";		verify.resdef = res + "def";		verify.pathnamedef = pathname + "def";	};		router.setDefaultHandlers([defaultHandler]);	router.addRoute("pathname", [handler]);	router.route("req", "res", "NO_MATCH");		assert.strictEqual(undefined, verify.req);	assert.strictEqual(undefined, verify.res);	assert.strictEqual(undefined, verify.pathname);	assert.strictEqual("reqdef", verify.reqdef);	assert.strictEqual("resdef", verify.resdef);	assert.strictEqual("NO_MATCHdef", verify.pathnamedef);};exports.run = function() {	testNoHandlers();	testSingleDefaultHandler();	testTwoDefaultHandlers();	testRouteWithSingleHandler_exactMatch();	testRouteWithSingleHandler_trailingSlash();	testRouteWithSingleHandler_withId();	testRouteWithSingleHandler_withIdAndTrailingSlash();	testRouteWithSingleHandler_withOneAdditionalCharacter();	testFallbackToDefault();};